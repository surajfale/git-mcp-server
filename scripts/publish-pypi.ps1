# Publish to Production PyPI Script
# This script cleans old builds, creates new distribution packages, and uploads to PyPI

Write-Host "üßπ Cleaning old builds..." -ForegroundColor Cyan

# Remove old build artifacts
if (Test-Path "dist") {
    Remove-Item -Recurse -Force "dist"
    Write-Host "  ‚úì Removed dist/" -ForegroundColor Green
}

if (Test-Path "build") {
    Remove-Item -Recurse -Force "build"
    Write-Host "  ‚úì Removed build/" -ForegroundColor Green
}

if (Test-Path "src/git_commit_mcp.egg-info") {
    Remove-Item -Recurse -Force "src/git_commit_mcp.egg-info"
    Write-Host "  ‚úì Removed egg-info/" -ForegroundColor Green
}

Write-Host ""
Write-Host "üì¶ Building distribution packages..." -ForegroundColor Cyan

# Build the package
python -m build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Build failed!" -ForegroundColor Red
    exit 1
}

Write-Host "  ‚úì Build successful!" -ForegroundColor Green
Write-Host ""

# Check the package
Write-Host "üîç Checking package..." -ForegroundColor Cyan
twine check dist/*

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Package check failed!" -ForegroundColor Red
    exit 1
}

Write-Host "  ‚úì Package check passed!" -ForegroundColor Green
Write-Host ""

# Upload to PyPI
Write-Host "üöÄ Uploading to PyPI..." -ForegroundColor Cyan
Write-Host "  (You will be prompted for your PyPI API token)" -ForegroundColor Yellow
Write-Host ""

twine upload dist/*

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Upload failed!" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "‚úÖ Successfully published to PyPI!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Next steps:" -ForegroundColor Cyan
Write-Host "  1. View your package: https://pypi.org/project/git-commit-mcp-server/" -ForegroundColor White
Write-Host "  2. Test installation: pipx install git-commit-mcp-server" -ForegroundColor White
Write-Host ""
